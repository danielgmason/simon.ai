{
  "_args": [
    [
      "grunt-grep@0.7.0",
      "/Users/danielmason/GitHub/simon.ai"
    ]
  ],
  "_from": "grunt-grep@0.7.0",
  "_id": "grunt-grep@0.7.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/grunt-grep",
  "_npmUser": {
    "email": "nikeiwe@gmail.com",
    "name": "msemenistyi"
  },
  "_npmVersion": "1.3.5",
  "_phantomChildren": {},
  "_requested": {
    "name": "grunt-grep",
    "raw": "grunt-grep@0.7.0",
    "rawSpec": "0.7.0",
    "scope": null,
    "spec": "0.7.0",
    "type": "version"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/grunt-grep/-/grunt-grep-0.7.0.tgz",
  "_shasum": "f82bcdfb02a987e062ede0c764bc17ddd48772c7",
  "_shrinkwrap": null,
  "_spec": "grunt-grep@0.7.0",
  "_where": "/Users/danielmason/GitHub/simon.ai",
  "author": {
    "email": "nikeiwe@gmail.com",
    "name": "Mykyta Semenistyi",
    "url": "msemenistyi.info"
  },
  "bugs": {
    "url": "https://github.com/msemenistyi/grunt-grep/issues"
  },
  "dependencies": {},
  "description": "Plugin for creating several versions of files according to the environment needs. Search lines for defined pattern and remove it",
  "devDependencies": {
    "grunt": "~0.4.1",
    "grunt-cli": "~0.1.9",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-jshint": "~0.1.1",
    "grunt-contrib-nodeunit": "~0.2.2"
  },
  "directories": {},
  "dist": {
    "shasum": "f82bcdfb02a987e062ede0c764bc17ddd48772c7",
    "tarball": "https://registry.npmjs.org/grunt-grep/-/grunt-grep-0.7.0.tgz"
  },
  "engines": {
    "node": ">= 0.8.0"
  },
  "homepage": "https://github.com/msemenistyi/grunt-grep",
  "keywords": [
    "gruntplugin"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/msemenistyi/grunt-grep/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "maintainers": [
    {
      "name": "msemenistyi",
      "email": "nikeiwe@gmail.com"
    }
  ],
  "name": "grunt-grep",
  "optionalDependencies": {},
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "readme": "# grunt-grep\r\n[![Build Status](https://travis-ci.org/msemenistyi/grunt-grep.png)](https://travis-ci.org/msemenistyi/grunt-grep)\r\n\r\n> Remove lines that match defined patterns within comments sections. Build several versions of file \r\n\r\n## Getting Started\r\nThis plugin requires Grunt `~0.4.1`\r\n\r\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\r\n\r\n```shell\r\nnpm install grunt-grep --save-dev\r\n```\r\n\r\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\r\n\r\n```js\r\ngrunt.loadNpmTasks('grunt-grep');\r\n```\r\n\r\n## The \"grep\" task\r\n\r\n### Overview\r\nCreate several versions of one file for different environments, needs etc. Handle several files which not differ much in one file with help of comments. \r\nHandle browser-specific features for building different html, css, js or any other files for better user experience by delivering no more instructions than is required. \r\n\r\nIn your project's Gruntfile, add a section named `grep` to the data object passed into `grunt.initConfig()`.\r\n\r\n```js\r\ngrunt.initConfig({\r\n\tgrep: {\r\n\t\tproduction: {\r\n\t\t\tfiles: {\r\n\t\t\t\t'tmp/boot.css': ['test/fixtures/boot.css'], //dest file with lines matching pattern excluded: src files\r\n\t\t\t\t'tmp/styles': ['test/fixtures/*.styl'] //src could be presented as a wildcard, new files with corresponding names will be created in the dest folder\r\n\t\t\t},\r\n\t\t\toptions: {\r\n\t\t\t\tpattern: 'dev' //your pattern that will be excluded from file\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n})\r\n```\r\n\r\n### Basic comment types supported\r\n+ **slash_asterisk** /\\* \\*/: `.css, .c, .h` \r\n+ **slash_slash** //:  `.js, .styl, .jade, .cs, .m, .java, .php`\r\n+ **tag_comment** <!-- -->: `.xml, .html`\r\n+ **sharp** #: `.coffee, .py, .rb, .sh, .pl`\r\n+ **dash_dash** -- `.hs, .sql` \r\n+ **single_quote** ' `.vb` \r\n+ **bracket_asterisk** (* *) `.scpt`\r\n+ **equal_sign** =\r\n\r\n**Warning**  \r\nGrep works with one line comments. Multi-line support is implemented with help of startPattern and endPattern options.\r\n\r\n### Options\r\n**pattern**\r\n`Type: String`  \r\npattern for matching lines that should be removed (e.g. 'not_important')\r\n\r\n**startPattern** `Type: String` *default* **:s**  \r\ngrep can remove several lines by looking for opening and ending pattern. (comment should be `//@grep not_important:s`)\r\n\r\n**endPattern** `Type: String` *default* **:e**  \r\nending pattern for multi-line support. (comment should be `//@grep not_important:e`)\r\n\r\n**denotation** `Type: String` *default* **@grep**  \r\nstring which tells grep if he should look at this line. Value could be '' so that each line is looped throw by grep.   \r\n**Warning** denotation only works for known file types. for others grep will just look for pattern passed.\r\n\r\n**fileOverride** `Type: Boolean` *default* **false**  \r\nif **grep** finds out that dest file exists, it file remove it first.  \r\n\r\n**removeDenotationComments** `Type: Boolean` *default* **true**  \r\ntells if all the denotation comments (*//@grep* as a default one) should be removed\r\n\r\n**exclude** `Type: Boolean` *default* **false**   \r\ndetermines if we should delete line with pattern (for false) or all others @grep lines (for true)\r\n\r\n**commentType** `Type: Boolean` *default* **undefined**   \r\npoint the grep to which comment type pattern to apply to this file. Overrides extension-defined pattern. Possible values: `slash_asterisk, slash_slash, tag_comment, sharp, dash_dash, single_quote`\r\n\r\n**isDestAFile** `Type: Boolean` *default* **false**   \r\nwhen specifying a dest looking like a folder (simply without '.' in name or '/' in the end), **grep** assumes that it's a folder. Though\r\nit can be mistaken. **True** value will point it.\r\n\r\n### Basic Usage\r\n\r\n#### Source files\r\n*index.html*\r\n```html\r\n<link rel=\"stylesheet\" href=\"./style.css\"> <!--@grep dev-->\r\n<link rel=\"stylesheet\" href=\"http://some.cdn/style.css\"> <!--@grep production-->\r\n```\r\n*style.css*\r\n```css\r\n#image{\r\n\tbackground-image: url(\"./style.css\"); //@grep dev\r\n\tbackground-image: url(\"http://some.cdn/style.css\"); //@grep production\r\n}\r\n```\r\n\r\n#### Grunt grep config\r\n```js\r\n\tgrep: {\r\n\t\tproduction: {\r\n\t\t\tfiles: {\r\n\t\t\t\t'tmp/': ['./index.html', './style.css']\r\n\t\t\t},\r\n\t\t\toptions: {\r\n\t\t\t\tpattern: 'dev'\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n```\r\n\r\n#### Result\r\n*index.html*\r\n```html\r\n<link rel=\"stylesheet\" href=\"http://some.cdn/style.css\"> <!--@grep production-->\r\n```\r\n*style.css*\r\n```css\r\n#image{\r\n\tbackground-image: url(\"http://some.cdn/style.css\"); //@grep production\r\n}\r\n```\r\n\r\n### Denotation overriding\r\n\r\n#### Source files\r\n*index.html*\r\n```html\r\n<link rel=\"stylesheet\" href=\"./style.css\"> <!--@condition dev-->\r\n<link rel=\"stylesheet\" href=\"http://some.cdn/style.css\"> <!--@condition production-->\r\n```\r\n\r\n#### Grunt condition config\r\n```js\r\n\tgrep: { production: { files: {'tmp/': ['./index.html']}, options: {pattern: 'dev', denotation: '@condition'}}}\r\n```\r\n\r\n#### Result\r\n*index.html*\r\n```html\r\n<link rel=\"stylesheet\" href=\"http://some.cdn/style.css\"> <!--@grep production-->\r\n```\r\n## Contributing\r\nFeel free to open issues and suggest pull requests.\r\n\r\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/). Run command `npm test` which is alias for `grunt test`.\r\n\r\nEspecially appreciated is adding file types and comment types.\r\n\r\nVersions are assigned according to [SemVer](http://semver.org/) specification. \r\n\r\n## Release History\r\n\r\n2013-11-09   v 0.7.0   Update comment type for known file type lookup. Add *commentType* options.   \r\n2013-11-07   v 0.6.0   Add exclude option.   \r\n2013-11-04   v 0.5.0   Add denotation option.  \r\n2013-10-28   v 0.4.0   Add isDestAFile option. Enhance pattern building. Add tests for majority of functionality.  \r\n2013-10-19   v 0.3.0   Refactor into procedural style. Add multifile and wildcards support. Add fileOverride option.",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/msemenistyi/grunt-grep.git"
  },
  "scripts": {
    "test": "grunt test"
  },
  "version": "0.7.0"
}
